% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step-select.R
\name{step.plugin}
\alias{step.plugin}
\title{Plug-in step selection}
\usage{
step.plugin(
  FUN,
  x,
  h0 = 1e-05 * (abs(x) + (x == 0)),
  range = h0/c(10000, 1e-04),
  cores = getOption("pnd.cores"),
  preschedule = getOption("pnd.preschedule"),
  cl = NULL,
  diagnostics = FALSE,
  ...
)
}
\value{
A list similar to the one returned by \code{optim()}: \code{par} -- the optimal
step size found, \code{value} -- the estimated numerical first derivative (central
differences), \code{counts} -- the number of iterations (here, it is 2),
\code{abs.error} -- an estimate of the total approximation error (sum of truncation and
rounding errors),
\code{exitcode} -- an integer code indicating the termination status:
\code{0} indicates termination with checks passed tolerance,
\code{1} means that the third derivative is exactly zero (large step size preferred),
\code{2} signals that the third derivative is too close to zero (large step size preferred),
\code{3} indicates a solution at the boundary of the allowed value range.
\code{message} is a summary message of the exit status.
If \code{diagnostics} is \code{TRUE}, \code{iterations} is a list
including the two-step size search path, argument grids, function values on those grids,
and estimated 3rd derivative values.
}
\description{
Plug-in step selection
}
\details{
This function computes the optimal step size for central differences using the
plug-in approach.
The optimal step size is determined as the minimiser of the total error, which for central
finite differences is (assuming minimal bounds for relative rounding errors)
\deqn{\sqrt[3]{1.5 \frac{f'(x)}{f'''(x) \epsilon_{\mathrm{mach}}}}}{[(1.5 mach.eps * f' / f''')^(1/3)]}
If the estimated third derivative is too small, the function assumes a third
derivative of 1 to prevent division-by-zero errors.
}
\examples{
f <- function(x) x^4
step.plugin(x = 2, f)
step.plugin(x = 0, f)
}
\references{
\insertAllCited{}
}
